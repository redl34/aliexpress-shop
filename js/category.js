// JavaScript –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π

let currentProducts = [];
let currentCategory = '';

document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÅ Category page initialized');
    initializeCategoryPage();
    updateCartCounter();
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
async function initializeCategoryPage() {
    // –û—Ç—Ä–∏–º—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ URL
    const urlParams = new URLSearchParams(window.location.search);
    currentCategory = urlParams.get('category') || 'mens-clothing';
    
    console.log(`üîÑ Loading category: ${currentCategory}`);
    
    await loadCategoryData();
    updatePageInfo();
    displayProducts();
    setupEventListeners();
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
async function loadCategoryData() {
    try {
        const response = await fetch('./data/products.json');
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        currentProducts = data.products.filter(product => 
            product.category === currentCategory && product.status === 'active'
        );
        
        console.log(`‚úÖ Loaded ${currentProducts.length} products for ${currentCategory}`);
        
    } catch (error) {
        console.error('‚ùå Error loading category data:', error);
        showError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó');
        loadFallbackProducts();
    }
}

// –ó–∞–ø–∞—Å–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
function loadFallbackProducts() {
    const fallbackData = {
        'mens-clothing': [
            {
                id: 1,
                name: "–ß–æ–ª–æ–≤—ñ—á–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ Basic",
                category: "mens-clothing",
                price: 299,
                image: "https://via.placeholder.com/300x300/007bff/ffffff?text=T-Shirt",
                description: "–ó—Ä—É—á–Ω–∞ —á–æ–ª–æ–≤—ñ—á–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ –∑ –±–∞–≤–æ–≤–Ω–∏"
            },
            {
                id: 2,
                name: "–î–∂–∏–Ω—Å–∏ Classic",
                category: "mens-clothing",
                price: 799,
                image: "https://via.placeholder.com/300x300/28a745/ffffff?text=Jeans",
                description: "–ö–ª–∞—Å–∏—á–Ω—ñ —á–æ–ª–æ–≤—ñ—á—ñ –¥–∂–∏–Ω—Å–∏"
            }
        ],
        'womens-clothing': [
            {
                id: 3,
                name: "–ñ—ñ–Ω–æ—á–∞ —Å—É–∫–Ω—è Elegant",
                category: "womens-clothing",
                price: 1299,
                image: "https://via.placeholder.com/300x300/e83e8c/ffffff?text=Dress",
                description: "–ï–ª–µ–≥–∞–Ω—Ç–Ω–∞ –∂—ñ–Ω–æ—á–∞ —Å—É–∫–Ω—è"
            }
        ],
        'electronics': [
            {
                id: 4,
                name: "–°–º–∞—Ä—Ç—Ñ–æ–Ω SmartX",
                category: "electronics",
                price: 8999,
                image: "https://via.placeholder.com/300x300/6f42c1/ffffff?text=Phone",
                description: "–°—É—á–∞—Å–Ω–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω"
            }
        ]
    };
    
    currentProducts = fallbackData[currentCategory] || [];
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
function updatePageInfo() {
    const categoryData = getCategoryData(currentCategory);
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    document.title = `${categoryData.name} - AliExpress Shop`;
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    const titleElement = document.getElementById('category-title');
    const descElement = document.getElementById('category-description');
    const breadcrumbElement = document.getElementById('breadcrumb-category');
    
    if (titleElement) titleElement.textContent = categoryData.name;
    if (descElement) descElement.textContent = categoryData.description;
    if (breadcrumbElement) breadcrumbElement.textContent = categoryData.name;
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
function getCategoryData(category) {
    const categories = {
        'mens-clothing': {
            name: '–ß–æ–ª–æ–≤—ñ—á–∏–π –æ–¥—è–≥',
            description: '–°—Ç–∏–ª—å–Ω–∏–π –æ–¥—è–≥ –¥–ª—è —á–æ–ª–æ–≤—ñ–∫—ñ–≤'
        },
        'womens-clothing': {
            name: '–ñ—ñ–Ω–æ—á–∏–π –æ–¥—è–≥',
            description: '–ï–ª–µ–≥–∞–Ω—Ç–Ω–∏–π –æ–¥—è–≥ –¥–ª—è –∂—ñ–Ω–æ–∫'
        },
        'electronics': {
            name: '–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞',
            description: '–°—É—á–∞—Å–Ω–∞ —Ç–µ—Ö–Ω—ñ–∫–∞ —Ç–∞ –≥–∞–¥–∂–µ—Ç–∏'
        }
    };
    
    return categories[category] || {
        name: '–ö–∞—Ç–µ–≥–æ—Ä—ñ—è',
        description: '–¢–æ–≤–∞—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó'
    };
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
function displayProducts() {
    const container = document.getElementById('products-container');
    if (!container) return;
    
    if (currentProducts.length === 0) {
        container.innerHTML = `
            <div class="no-products">
                <h3>–¢–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
                <p>–£ —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ–∫–∏ —â–æ –Ω–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤</p>
            </div>
        `;
        return;
    }
    
    container.innerHTML = currentProducts.map(product => `
        <div class="product-card">
            <img src="${product.image}" alt="${product.name}" class="product-image"
                 onerror="this.src='images/placeholder.jpg'">
            <div class="product-info">
                <h3 class="product-name">${product.name}</h3>
                <p class="product-description">${product.description}</p>
                <p class="product-price">${product.price} –≥—Ä–Ω</p>
                <button class="add-to-cart-btn" onclick="addToCart(${product.id})">
                    –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫
                </button>
            </div>
        </div>
    `).join('');
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ª—É—Ö–∞—á—ñ–≤ –ø–æ–¥—ñ–π
function setupEventListeners() {
    // –ü–æ—à—É–∫ —Ç–æ–≤–∞—Ä—ñ–≤
    const searchInput = document.getElementById('product-search');
    if (searchInput) {
        searchInput.addEventListener('input', function(e) {
            searchProducts(e.target.value);
        });
    }
}

// –ü–æ—à—É–∫ —Ç–æ–≤–∞—Ä—ñ–≤
function searchProducts(query) {
    if (!query.trim()) {
        displayProducts();
        return;
    }
    
    const filteredProducts = currentProducts.filter(product =>
        product.name.toLowerCase().includes(query.toLowerCase()) ||
        product.description.toLowerCase().includes(query.toLowerCase())
    );
    
    displayFilteredProducts(filteredProducts);
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
function displayFilteredProducts(filteredProducts) {
    const container = document.getElementById('products-container');
    if (!container) return;
    
    if (filteredProducts.length === 0) {
        container.innerHTML = `
            <div class="no-products">
                <h3>–¢–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
                <p>–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –∑–∞–ø–∏—Ç –ø–æ—à—É–∫—É</p>
            </div>
        `;
        return;
    }
    
    container.innerHTML = filteredProducts.map(product => `
        <div class="product-card">
            <img src="${product.image}" alt="${product.name}" class="product-image"
                 onerror="this.src='images/placeholder.jpg'">
            <div class="product-info">
                <h3 class="product-name">${product.name}</h3>
                <p class="product-description">${product.description}</p>
                <p class="product-price">${product.price} –≥—Ä–Ω</p>
                <button class="add-to-cart-btn" onclick="addToCart(${product.id})">
                    –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫
                </button>
            </div>
        </div>
    `).join('');
}

// –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫–æ—à–∏–∫
function addToCart(productId) {
    const product = currentProducts.find(p => p.id === productId);
    
    if (!product) {
        showNotification('–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ', 'error');
        return;
    }
    
    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    const existingItem = cart.find(item => item.id === productId);
    
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({
            ...product,
            quantity: 1
        });
    }
    
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartCounter();
    showNotification('–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –≤ –∫–æ—à–∏–∫!');
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –∫–æ—à–∏–∫–∞
function updateCartCounter() {
    const cart = JSON.parse(localStorage.getItem('cart')) || [];
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    const counter = document.getElementById('cart-counter');
    
    if (counter) {
        counter.textContent = totalItems;
        counter.style.display = totalItems > 0 ? 'flex' : 'none';
    }
}

// –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è
function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.className = `notification ${type === 'error' ? 'error' : ''}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É
function showError(message) {
    const container = document.getElementById('products-container');
    if (container) {
        container.innerHTML = `<div class="error">${message}</div>`;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
window.addToCart = addToCart;
window.searchProducts = searchProducts;