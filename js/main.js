// –ì–æ–ª–æ–≤–Ω–∏–π JavaScript –¥–ª—è —Å–∞–π—Ç—É

let cart = JSON.parse(localStorage.getItem('cart')) || [];
let currentProducts = [];

document.addEventListener('DOMContentLoaded', function() {
    console.log('üõç AliExpress Shop initialized');
    initializePage();
    updateCartCounter();
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
function initializePage() {
    loadFeaturedProducts();
    setupEventListeners();
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
async function loadFeaturedProducts() {
    try {
        console.log('üîÑ Loading featured products...');
        
        const response = await fetch('./data/products.json');
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        // –ë–µ—Ä–µ–º–æ –ø–æ 2 —Ç–æ–≤–∞—Ä–∏ –∑ –∫–æ–∂–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        const mensProducts = data.products.filter(p => p.category === 'mens-clothing').slice(0, 2);
        const womensProducts = data.products.filter(p => p.category === 'womens-clothing').slice(0, 2);
        const electronicsProducts = data.products.filter(p => p.category === 'electronics').slice(0, 2);
        
        currentProducts = [...mensProducts, ...womensProducts, ...electronicsProducts];
        
        console.log(`‚úÖ Loaded ${currentProducts.length} featured products`);
        displayProducts(currentProducts);
        
    } catch (error) {
        console.error('‚ùå Error loading products:', error);
        showError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
        loadFallbackProducts();
    }
}

// –ó–∞–ø–∞—Å–Ω—ñ –¥–∞–Ω—ñ
function loadFallbackProducts() {
    console.log('üõ† Using fallback products');
    
    currentProducts = [
        {
            id: 1,
            name: "–ß–æ–ª–æ–≤—ñ—á–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ Basic",
            category: "mens-clothing",
            price: 299,
            image: "https://via.placeholder.com/300x300/007bff/ffffff?text=T-Shirt",
            description: "–ó—Ä—É—á–Ω–∞ —á–æ–ª–æ–≤—ñ—á–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ –∑ –±–∞–≤–æ–≤–Ω–∏"
        },
        {
            id: 2,
            name: "–î–∂–∏–Ω—Å–∏ Classic",
            category: "mens-clothing",
            price: 799,
            image: "https://via.placeholder.com/300x300/28a745/ffffff?text=Jeans",
            description: "–ö–ª–∞—Å–∏—á–Ω—ñ —á–æ–ª–æ–≤—ñ—á—ñ –¥–∂–∏–Ω—Å–∏"
        },
        {
            id: 3,
            name: "–ñ—ñ–Ω–æ—á–∞ —Å—É–∫–Ω—è Elegant",
            category: "womens-clothing",
            price: 1299,
            image: "https://via.placeholder.com/300x300/e83e8c/ffffff?text=Dress",
            description: "–ï–ª–µ–≥–∞–Ω—Ç–Ω–∞ –∂—ñ–Ω–æ—á–∞ —Å—É–∫–Ω—è"
        }
    ];
    
    displayProducts(currentProducts);
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
function displayProducts(products) {
    const container = document.getElementById('featured-products');
    if (!container) return;
    
    if (products.length === 0) {
        container.innerHTML = '<div class="no-products">–¢–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</div>';
        return;
    }
    
    container.innerHTML = products.map(product => `
        <div class="product-card">
            <img src="${product.image}" alt="${product.name}" class="product-image"
                 onerror="this.src='images/placeholder.jpg'">
            <div class="product-info">
                <h3 class="product-name">${product.name}</h3>
                <p class="product-description">${product.description}</p>
                <p class="product-price">${product.price} –≥—Ä–Ω</p>
                <button class="add-to-cart-btn" onclick="addToCart(${product.id})">
                    –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫
                </button>
            </div>
        </div>
    `).join('');
}

// –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫–æ—à–∏–∫
function addToCart(productId) {
    const product = currentProducts.find(p => p.id === productId);
    
    if (!product) {
        showNotification('–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ', 'error');
        return;
    }
    
    const existingItem = cart.find(item => item.id === productId);
    
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({
            ...product,
            quantity: 1
        });
    }
    
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartCounter();
    showNotification('–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –≤ –∫–æ—à–∏–∫!');
    
    console.log('üõí Cart updated:', cart);
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –∫–æ—à–∏–∫–∞
function updateCartCounter() {
    const counter = document.getElementById('cart-counter');
    if (counter) {
        const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
        counter.textContent = totalItems;
        counter.style.display = totalItems > 0 ? 'flex' : 'none';
    }
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ª—É—Ö–∞—á—ñ–≤ –ø–æ–¥—ñ–π
function setupEventListeners() {
    // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º
    const categoryLinks = document.querySelectorAll('.category-card');
    categoryLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const category = this.getAttribute('data-category');
            if (category) {
                window.location.href = `category.html?category=${category}`;
            }
        });
    });
}

// –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è
function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.className = `notification ${type === 'error' ? 'error' : ''}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É
function showError(message) {
    const container = document.getElementById('featured-products');
    if (container) {
        container.innerHTML = `<div class="error">${message}</div>`;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
window.addToCart = addToCart;