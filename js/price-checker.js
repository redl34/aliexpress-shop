// –û–Ω–æ–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–ª—è —Ä–µ–∞–ª—å–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
class PriceChecker {
    // ... —ñ–Ω—à—ñ –º–µ—Ç–æ–¥–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è ...

    async checkProduct(product) {
        console.log(`üîç Checking product: ${product.name}`);
        
        // –Ø–∫—â–æ –Ω–µ–º–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ AliExpress - –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
        if (!product.aliExpressUrl || product.aliExpressUrl.trim() === '') {
            return {
                success: false,
                status: 'no_url',
                message: '–î–æ–¥–∞–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ AliExpress'
            };
        }

        try {
            // –°–∏–º—É–ª—é—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—ñ - –ø–∞—Ä—Å–∏–Ω–≥ AliExpress)
            const aliData = await this.simulateAliExpressCheck(product.aliExpressUrl);
            
            if (!aliData) {
                return {
                    success: false,
                    status: 'check_failed',
                    message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ AliExpress'
                };
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ü—ñ–Ω–∏
            const priceMatch = this.checkPrice(product.price, aliData.price);
            
            // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É
            let status, message, needsPriceUpdate = false, newPrice = product.price;

            if (!priceMatch.isMatch) {
                status = 'price_updated';
                message = `–¶—ñ–Ω—É –æ–Ω–æ–≤–ª–µ–Ω–æ: ${product.price} ‚Üí ${priceMatch.aliPrice} –≥—Ä–Ω`;
                needsPriceUpdate = true;
                newPrice = priceMatch.aliPrice;
            } else {
                status = 'success';
                message = '‚úÖ –¶—ñ–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞';
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            this.saveCheckResult(product.id, {
                status,
                message,
                originalPrice: product.price,
                newPrice,
                aliPrice: aliData.price,
                checkedAt: new Date().toISOString(),
                needsPriceUpdate
            });

            return {
                success: true,
                status,
                message,
                needsPriceUpdate,
                newPrice,
                aliData
            };

        } catch (error) {
            console.error('Check error:', error);
            return {
                success: false,
                status: 'error',
                message: `–ü–æ–º–∏–ª–∫–∞: ${error.message}`
            };
        }
    }

    // ... —ñ–Ω—à—ñ –º–µ—Ç–æ–¥–∏ ...
}