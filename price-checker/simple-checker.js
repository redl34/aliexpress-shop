const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

class SimplePriceChecker {
    constructor() {
        this.results = [];
        this.reportPath = path.join(__dirname, 'simple-report.json');
        this.productPages = [
            'https://redl34.github.io/aliexpress-shop/mens-clothing1.html'
        ];
    }

    async init() {
        this.browser = await puppeteer.launch({
            headless: "new", // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
            args: ['--no-sandbox', '--disable-setuid-sandbox']
        });
    }

    async parseAllPages() {
        let allProducts = [];
        
        for (const pageUrl of this.productPages) {
            console.log(`üîç –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ç–æ—Ä—ñ–Ω–∫–∏: ${pageUrl}`);
            const products = await this.parseSinglePage(pageUrl);
            allProducts = allProducts.concat(products);
            console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä—ñ–≤: ${products.length}`);
            
            await new Promise(resolve => setTimeout(resolve, 1000));
        }
        
        return allProducts;
    }

    async parseSinglePage(pageUrl) {
        const page = await this.browser.newPage();
        
        await page.goto(pageUrl, {
            waitUntil: 'networkidle2',
            timeout: 30000
        });

        const products = await page.evaluate((url) => {
            const items = [];
            const productElements = document.querySelectorAll('.product-card');
            
            console.log(`–ó–Ω–∞–π–¥–µ–Ω–æ .product-card –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: ${productElements.length}`);
            
            productElements.forEach((product, index) => {
                try {
                    // –ü–û–ö–†–ê–©–ï–ù–ò–ô –ü–û–®–£–ö –ù–ê–ó–í–ò
                    const titleSelectors = ['h3', '.product-details h3', '[class*="title"]'];
                    let titleElem = null;
                    
                    for (const selector of titleSelectors) {
                        titleElem = product.querySelector(selector);
                        if (titleElem && titleElem.textContent && titleElem.textContent.trim()) {
                            break;
                        }
                    }
                    
                    const priceElem = product.querySelector('.product-details .price');
                    const articleElem = product.querySelector('.product-details .articul');
                    const buttonElem = product.querySelector('.product-details a[href*="aliexpress"]');
                    
                    // –û—Ç—Ä–∏–º—É—î–º–æ –∞—Ä—Ç–∏–∫—É–ª
                    const dataArticle = product.getAttribute('data-articul');
                    
                    let articleFromText = '';
                    if (articleElem) {
                        const articleText = articleElem.textContent || '';
                        const articleMatch = articleText.match(/–∞—Ä—Ç\.\s*([A-Za-z0-9]+)/i);
                        if (articleMatch) {
                            articleFromText = articleMatch[1].trim();
                        }
                    }
                    
                    const article = dataArticle || articleFromText || `ART_${index + 1}`;
                    const title = titleElem ? titleElem.textContent.trim() : '–ë–µ–∑ –Ω–∞–∑–≤–∏';

                    if (priceElem && buttonElem) {
                        console.log(`‚úÖ –¢–æ–≤–∞—Ä ${index + 1}: "${title}" (${article})`);
                        
                        items.push({
                            article: article,
                            title: title,
                            yourPrice: priceElem.textContent.trim(),
                            aliExpressUrl: buttonElem.href,
                            pageUrl: url,
                            pageName: url.split('/').pop(),
                            checkDate: new Date().toLocaleString('uk-UA')
                        });
                    } else {
                        console.log(`‚ùå –¢–æ–≤–∞—Ä ${index + 1} –Ω–µ –º–∞—î —Ü—ñ–Ω–∏ –∞–±–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è`);
                    }
                    
                } catch (e) {
                    console.log('–ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É —Ç–æ–≤–∞—Ä—É:', e);
                }
            });
            
            return items;
        }, pageUrl);

        await page.close();
        return products;
    }

    async runCheck() {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–ø—Ä–æ—â–µ–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏...');
        await this.init();
        
        try {
            const products = await this.parseAllPages();
            
            const report = {
                generatedAt: new Date().toISOString(),
                totalProducts: products.length,
                pagesChecked: this.productPages.length,
                note: '–¶—è —Å–∏—Å—Ç–µ–º–∞ —Ç—ñ–ª—å–∫–∏ –∑–±–∏—Ä–∞—î –¥–∞–Ω—ñ –∑ –≤–∞—à–æ–≥–æ —Å–∞–π—Ç—É. –¶—ñ–Ω–∏ –Ω–∞ AliExpress –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –≤—Ä—É—á–Ω—É.',
                instruction: '–í—ñ–¥–∫—Ä–∏–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ AliExpress —ñ –ø–æ—Ä—ñ–≤–Ω—è–π—Ç–µ —Ü—ñ–Ω–∏ –≤—Ä—É—á–Ω—É',
                results: products
            };
            
            fs.writeFileSync(this.reportPath, JSON.stringify(report, null, 2));
            
            console.log('\nüìä ===== –ó–í–Ü–¢ =====');
            console.log(`üì¶ –í—Å—å–æ–≥–æ —Ç–æ–≤–∞—Ä—ñ–≤: ${products.length}`);
            console.log(`üìÑ –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ —Å—Ç–æ—Ä—ñ–Ω–æ–∫: ${this.productPages.length}`);
            console.log(`üìÅ –ó–≤—ñ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ: simple-report.json`);
            console.log('\nüí° –©–æ —Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ:');
            console.log('1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ simple-report.json');
            console.log('2. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏ –Ω–∞ AliExpress');
            console.log('3. –ü–æ—Ä—ñ–≤–Ω—è–π—Ç–µ —Ü—ñ–Ω–∏ –≤—Ä—É—á–Ω—É');
            console.log('4. –û–Ω–æ–≤—ñ—Ç—å —Ü—ñ–Ω–∏ –Ω–∞ –≤–∞—à–æ–º—É —Å–∞–π—Ç—ñ –ø—Ä–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ');
            
            // –ü–æ–∫–∞–∑—É—î–º–æ —Ç–æ–≤–∞—Ä–∏
            console.log('\nüìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:');
            products.forEach((product, index) => {
                console.log(`${index + 1}. ${product.title}`);
                console.log(`   üìã –ê—Ä—Ç–∏–∫—É–ª: ${product.article}`);
                console.log(`   üí∞ –í–∞—à–∞ —Ü—ñ–Ω–∞: ${product.yourPrice}`);
                console.log(`   üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è: ${product.aliExpressUrl}`);
                console.log('');
            });
            
        } catch (error) {
            console.error('üí• –ü–æ–º–∏–ª–∫–∞:', error);
        } finally {
            await this.browser.close();
        }
    }
}

// –ó–∞–ø—É—Å–∫
const checker = new SimplePriceChecker();
checker.runCheck().catch(console.error);